name: "Test action-ros-lint"
on:
  pull_request:
  push:
    branches:
      - master
      - 'releases/*'
  schedule:
    # Run the CI automatically every hour to look for flakyness.
    - cron:  '0 * * * *'

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  test_setup_ros:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:focal
    steps:
    - uses: actions/checkout@v2
      with:
        path: '.'
    - uses: actions/setup-node@v2.1.5
      with:
        node-version: '12.x'
    - run: .github/workflows/build-and-test.sh
    - uses: ros-tooling/setup-ros@0.2.0
    - uses: actions/checkout@v2
      with:
        repository: ament/ament_lint
        ref: 0.8.1
        path: 'ament_lint'
    - name: Try default linter
      uses: ./
      with:
        package-name: ament_copyright ament_lint
        workspace-directory: ament_lint
    - name: Try a linter with additional arguments
      uses: ./
      with:
        linter: lint_cmake
        arguments: '--filter=-linelength,+syntax'
        package-name: ament_cmake_cpplint
        workspace-directory: ament_lint
    - name: Try a linter with underscores in the name
      uses: ./
      with:
        linter: lint_cmake
        arguments: '--filter=-linelength'
        package-name: ament_cmake_cpplint
        workspace-directory: ament_lint

  test_setup_ros_docker:
    runs-on: ubuntu-latest
    container:
      image: rostooling/setup-ros-docker:ubuntu-focal-latest
      options: -u root  # setup-node requires root access
    steps:
    - uses: actions/checkout@v2
      with:
        path: '.'
    - uses: actions/setup-node@v2.1.5
      with:
        node-version: '12.x'
    - run: .github/workflows/build-and-test.sh
    - uses: actions/checkout@v2
      with:
        repository: ament/ament_lint
        ref: 0.8.1
        path: 'ament_lint'
    - name: Try default linter
      uses: ./
      with:
        package-name: ament_copyright ament_lint
        workspace-directory: ament_lint
    - name: Try a linter with additional arguments
      uses: ./
      with:
        linter: lint_cmake
        arguments: '--filter=-linelength,+syntax'
        package-name: ament_cmake_cpplint
        workspace-directory: ament_lint
    - name: Try a linter with underscores in the name
      uses: ./
      with:
        linter: lint_cmake
        arguments: '--filter=-linelength'
        package-name: ament_cmake_cpplint
        workspace-directory: ament_lint

  log_workflow_status_to_cloudwatch:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
    needs:
    - test_setup_ros
    - test_setup_ros_docker
    if: always()  # run even if the dependent jobs have failed to log failures
    # Allow build reports to fail on pull requests.
    # When a contribution is made on a fork, the secrets will not be available,
    # and this step will be failing. This is acceptable.
    # On the other end, we want to be notified if this happens on merge, or
    # on schedule.
    continue-on-error: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      with:
        # Checks if any of the jobs have failed.
        #
        # needs.*.result is returns the list of all success statuses as an
        # array, i.e. ['success', 'failure, 'success']
        # join() converts the array to a string 'successfailuresuccess'
        # contains() checks whether the string contains failure
        metric-value: ${{ ! contains(join(needs.*.result, ''), 'failure') && ! contains(join(needs.*.result, ''), 'cancelled') }}
